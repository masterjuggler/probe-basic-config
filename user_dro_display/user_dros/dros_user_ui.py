# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file '/home/buildbot/buildbot/worker/probe_basic-dev/sources/debian/python3-probe-basic/usr/share/configs/atc_sim/user_dro_display/user_dros/dros_user.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_dros_user(object):
    def setupUi(self, dros_user):
        dros_user.setObjectName("dros_user")
        dros_user.resize(466, 316)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(dros_user.sizePolicy().hasHeightForWidth())
        dros_user.setSizePolicy(sizePolicy)
        dros_user.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.c_axis_dro_layout_2 = QtWidgets.QVBoxLayout(dros_user)
        self.c_axis_dro_layout_2.setContentsMargins(0, 0, 0, 0)
        self.c_axis_dro_layout_2.setSpacing(0)
        self.c_axis_dro_layout_2.setObjectName("c_axis_dro_layout_2")
        self.widget_user = QtWidgets.QWidget(dros_user)
        self.widget_user.setObjectName("widget_user")
        self.verticalLayout_4 = QtWidgets.QVBoxLayout(self.widget_user)
        self.verticalLayout_4.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_4.setSpacing(0)
        self.verticalLayout_4.setObjectName("verticalLayout_4")
        self.header_layout = QtWidgets.QHBoxLayout()
        self.header_layout.setContentsMargins(1, 1, 1, 1)
        self.header_layout.setSpacing(7)
        self.header_layout.setObjectName("header_layout")
        self.zero_all_button = MDIButton(self.widget_user)
        self.zero_all_button.setEnabled(False)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.zero_all_button.sizePolicy().hasHeightForWidth())
        self.zero_all_button.setSizePolicy(sizePolicy)
        self.zero_all_button.setMinimumSize(QtCore.QSize(60, 40))
        self.zero_all_button.setMaximumSize(QtCore.QSize(60, 40))
        self.zero_all_button.setFocusPolicy(QtCore.Qt.NoFocus)
        self.zero_all_button.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.zero_all_button.setStyleSheet("MDIButton {\n"
"       font: 14pt \"Bebas Kai\";\n"
"}")
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap(":/images/zero.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.zero_all_button.setIcon(icon)
        self.zero_all_button.setIconSize(QtCore.QSize(20, 20))
        self.zero_all_button.setObjectName("zero_all_button")
        self.header_layout.addWidget(self.zero_all_button)
        self.frame = QtWidgets.QFrame(self.widget_user)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.frame.sizePolicy().hasHeightForWidth())
        self.frame.setSizePolicy(sizePolicy)
        self.frame.setMinimumSize(QtCore.QSize(0, 40))
        self.frame.setMaximumSize(QtCore.QSize(16777215, 40))
        self.frame.setStyleSheet(".QFrame{\n"
"    border-style: solid;\n"
"    border-color: rgb(176, 179,172);\n"
"    border-width: 1px;\n"
"    border-radius: 4px;\n"
"    background-color: rgb(90, 90, 90);\n"
"    padding: -5px;\n"
"}")
        self.frame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame.setObjectName("frame")
        self.horizontalLayout_103 = QtWidgets.QHBoxLayout(self.frame)
        self.horizontalLayout_103.setContentsMargins(5, -1, 7, -1)
        self.horizontalLayout_103.setSpacing(8)
        self.horizontalLayout_103.setObjectName("horizontalLayout_103")
        self.work_column_header = StatusLabel(self.frame)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.work_column_header.sizePolicy().hasHeightForWidth())
        self.work_column_header.setSizePolicy(sizePolicy)
        self.work_column_header.setMinimumSize(QtCore.QSize(100, 17))
        self.work_column_header.setMaximumSize(QtCore.QSize(100, 17))
        self.work_column_header.setStyleSheet("QLabel{\n"
"    color: rgb(238, 238, 236);\n"
"    font: 16pt \"Bebas Kai\";\n"
"    padding-left: 6px;\n"
"}")
        self.work_column_header.setAlignment(QtCore.Qt.AlignCenter)
        self.work_column_header.setObjectName("work_column_header")
        self.horizontalLayout_103.addWidget(self.work_column_header)
        self.machine_column_header = QtWidgets.QLabel(self.frame)
        self.machine_column_header.setEnabled(False)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.machine_column_header.sizePolicy().hasHeightForWidth())
        self.machine_column_header.setSizePolicy(sizePolicy)
        self.machine_column_header.setMinimumSize(QtCore.QSize(100, 17))
        self.machine_column_header.setMaximumSize(QtCore.QSize(100, 17))
        self.machine_column_header.setStyleSheet("QLabel{\n"
"    color: rgb(238, 238, 236);\n"
"    font: 16pt \"Bebas Kai\";\n"
"}")
        self.machine_column_header.setAlignment(QtCore.Qt.AlignCenter)
        self.machine_column_header.setObjectName("machine_column_header")
        self.horizontalLayout_103.addWidget(self.machine_column_header)
        self.dtg_column_header = QtWidgets.QLabel(self.frame)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.dtg_column_header.sizePolicy().hasHeightForWidth())
        self.dtg_column_header.setSizePolicy(sizePolicy)
        self.dtg_column_header.setMinimumSize(QtCore.QSize(100, 17))
        self.dtg_column_header.setMaximumSize(QtCore.QSize(100, 17))
        self.dtg_column_header.setStyleSheet("QLabel{\n"
"    color: rgb(238, 238, 236);\n"
"    font: 16pt \"Bebas Kai\";\n"
"}")
        self.dtg_column_header.setAlignment(QtCore.Qt.AlignCenter)
        self.dtg_column_header.setObjectName("dtg_column_header")
        self.horizontalLayout_103.addWidget(self.dtg_column_header)
        self.header_layout.addWidget(self.frame)
        self.ref_all_button = ActionButton(self.widget_user)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(1)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.ref_all_button.sizePolicy().hasHeightForWidth())
        self.ref_all_button.setSizePolicy(sizePolicy)
        self.ref_all_button.setMinimumSize(QtCore.QSize(62, 40))
        self.ref_all_button.setMaximumSize(QtCore.QSize(62, 40))
        self.ref_all_button.setFocusPolicy(QtCore.Qt.NoFocus)
        self.ref_all_button.setStyleSheet("QPushButton {\n"
"       font: 15pt \"Bebas Kai\";\n"
"}")
        self.ref_all_button.setObjectName("ref_all_button")
        self.header_layout.addWidget(self.ref_all_button)
        self.verticalLayout_4.addLayout(self.header_layout)
        self.x_axis_dro_layout = QtWidgets.QHBoxLayout()
        self.x_axis_dro_layout.setContentsMargins(1, 1, 1, 1)
        self.x_axis_dro_layout.setSpacing(7)
        self.x_axis_dro_layout.setObjectName("x_axis_dro_layout")
        self.zero_x_button = MDIButton(self.widget_user)
        self.zero_x_button.setEnabled(False)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.zero_x_button.sizePolicy().hasHeightForWidth())
        self.zero_x_button.setSizePolicy(sizePolicy)
        self.zero_x_button.setMinimumSize(QtCore.QSize(60, 40))
        self.zero_x_button.setMaximumSize(QtCore.QSize(60, 40))
        self.zero_x_button.setFocusPolicy(QtCore.Qt.NoFocus)
        self.zero_x_button.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.zero_x_button.setStyleSheet("MDIButton {\n"
"       font: 17pt \"Bebas Kai\";\n"
"}")
        self.zero_x_button.setIcon(icon)
        self.zero_x_button.setIconSize(QtCore.QSize(20, 20))
        self.zero_x_button.setObjectName("zero_x_button")
        self.x_axis_dro_layout.addWidget(self.zero_x_button)
        self.dro_entry_main_x = DROLineEdit(self.widget_user)
        self.dro_entry_main_x.setMinimumSize(QtCore.QSize(100, 35))
        self.dro_entry_main_x.setMaximumSize(QtCore.QSize(100, 35))
        font = QtGui.QFont()
        font.setFamily("Bebas Kai")
        font.setPointSize(17)
        font.setBold(False)
        font.setItalic(False)
        font.setWeight(50)
        self.dro_entry_main_x.setFont(font)
        self.dro_entry_main_x.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.dro_entry_main_x.setStyleSheet("QLineEdit{\n"
"    border-style: transparant;\n"
"    border-color: rgb(235, 235, 235);\n"
"    border-width: 1px;\n"
"    border-radius: 5px;\n"
"    color: black;\n"
"    background: rgb(235, 235, 235);\n"
"    padding-right: 2px;\n"
"    font: 17pt \"Bebas Kai\";\n"
"}")
        self.dro_entry_main_x.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.dro_entry_main_x.setProperty("referenceType", 1)
        self.dro_entry_main_x.setProperty("axisNumber", 0)
        self.dro_entry_main_x.setProperty("latheMode", 0)
        self.dro_entry_main_x.setObjectName("dro_entry_main_x")
        self.x_axis_dro_layout.addWidget(self.dro_entry_main_x)
        self.drolabel_machine_x = DROLabel(self.widget_user)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.drolabel_machine_x.sizePolicy().hasHeightForWidth())
        self.drolabel_machine_x.setSizePolicy(sizePolicy)
        self.drolabel_machine_x.setMinimumSize(QtCore.QSize(100, 35))
        self.drolabel_machine_x.setMaximumSize(QtCore.QSize(100, 35))
        self.drolabel_machine_x.setStyleSheet("QLabel{\n"
"    border-style: transparent;\n"
"    border-color: rgb(235, 235, 235);\n"
"    border-width: 1px;\n"
"    border-radius: 5px;\n"
"    color: black;\n"
"    background: rgb(235, 235, 235);\n"
"    font: 17pt \"Bebas Kai\";\n"
"    padding-right: 2px;\n"
"}\n"
"\n"
"QLabel[style=\"unhomed\"]{\n"
"   color: red;\n"
"}\n"
"\n"
"QLabel[style=\"homing\"]{\n"
"   color: rgb(196, 160, 0);\n"
"}")
        self.drolabel_machine_x.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.drolabel_machine_x.setProperty("referenceType", 0)
        self.drolabel_machine_x.setProperty("axisNumber", 0)
        self.drolabel_machine_x.setProperty("latheMode", 0)
        self.drolabel_machine_x.setObjectName("drolabel_machine_x")
        self.x_axis_dro_layout.addWidget(self.drolabel_machine_x)
        self.drolabel_dtg_x = DROLabel(self.widget_user)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.drolabel_dtg_x.sizePolicy().hasHeightForWidth())
        self.drolabel_dtg_x.setSizePolicy(sizePolicy)
        self.drolabel_dtg_x.setMinimumSize(QtCore.QSize(100, 35))
        self.drolabel_dtg_x.setMaximumSize(QtCore.QSize(100, 35))
        self.drolabel_dtg_x.setStyleSheet("QLabel{\n"
"    border-style: transparent;\n"
"    border-color: rgb(235, 235, 235);\n"
"    border-width: 1px;\n"
"    border-radius: 5px;\n"
"    color: black;\n"
"    background: rgb(235, 235, 235);\n"
"    font: 17pt \"Bebas Kai\";\n"
"    padding-right: 2px;\n"
"}")
        self.drolabel_dtg_x.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.drolabel_dtg_x.setProperty("referenceType", 2)
        self.drolabel_dtg_x.setProperty("axisNumber", 0)
        self.drolabel_dtg_x.setProperty("latheMode", 0)
        self.drolabel_dtg_x.setObjectName("drolabel_dtg_x")
        self.x_axis_dro_layout.addWidget(self.drolabel_dtg_x)
        self.ref_x_button = ActionButton(self.widget_user)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.ref_x_button.sizePolicy().hasHeightForWidth())
        self.ref_x_button.setSizePolicy(sizePolicy)
        self.ref_x_button.setMinimumSize(QtCore.QSize(62, 40))
        self.ref_x_button.setMaximumSize(QtCore.QSize(62, 40))
        self.ref_x_button.setFocusPolicy(QtCore.Qt.NoFocus)
        self.ref_x_button.setStyleSheet("QPushButton {\n"
"       font: 15pt \"Bebas Kai\";\n"
"}")
        self.ref_x_button.setObjectName("ref_x_button")
        self.x_axis_dro_layout.addWidget(self.ref_x_button)
        self.verticalLayout_4.addLayout(self.x_axis_dro_layout)
        self.y_axis_dro_layout = QtWidgets.QHBoxLayout()
        self.y_axis_dro_layout.setContentsMargins(1, 1, 1, 1)
        self.y_axis_dro_layout.setSpacing(7)
        self.y_axis_dro_layout.setObjectName("y_axis_dro_layout")
        self.zero_y_button = MDIButton(self.widget_user)
        self.zero_y_button.setEnabled(False)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.zero_y_button.sizePolicy().hasHeightForWidth())
        self.zero_y_button.setSizePolicy(sizePolicy)
        self.zero_y_button.setMinimumSize(QtCore.QSize(60, 40))
        self.zero_y_button.setMaximumSize(QtCore.QSize(60, 40))
        self.zero_y_button.setFocusPolicy(QtCore.Qt.NoFocus)
        self.zero_y_button.setStyleSheet("MDIButton {\n"
"       font: 17pt \"Bebas Kai\";\n"
"}")
        self.zero_y_button.setIcon(icon)
        self.zero_y_button.setIconSize(QtCore.QSize(20, 20))
        self.zero_y_button.setObjectName("zero_y_button")
        self.y_axis_dro_layout.addWidget(self.zero_y_button)
        self.dro_entry_main_y = DROLineEdit(self.widget_user)
        self.dro_entry_main_y.setMinimumSize(QtCore.QSize(100, 35))
        self.dro_entry_main_y.setMaximumSize(QtCore.QSize(100, 35))
        font = QtGui.QFont()
        font.setFamily("Bebas Kai")
        font.setPointSize(17)
        font.setBold(False)
        font.setItalic(False)
        font.setWeight(50)
        self.dro_entry_main_y.setFont(font)
        self.dro_entry_main_y.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.dro_entry_main_y.setStyleSheet("QLineEdit{\n"
"    border-style: transparant;\n"
"    border-color: rgb(235, 235, 235);\n"
"    border-width: 1px;\n"
"    border-radius: 5px;\n"
"    color: black;\n"
"    background: rgb(235, 235, 235);\n"
"    padding-right: 2px;\n"
"    font: 17pt \"Bebas Kai\";\n"
"}")
        self.dro_entry_main_y.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.dro_entry_main_y.setProperty("axisNumber", 1)
        self.dro_entry_main_y.setObjectName("dro_entry_main_y")
        self.y_axis_dro_layout.addWidget(self.dro_entry_main_y)
        self.drolabel_machine_y = DROLabel(self.widget_user)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.drolabel_machine_y.sizePolicy().hasHeightForWidth())
        self.drolabel_machine_y.setSizePolicy(sizePolicy)
        self.drolabel_machine_y.setMinimumSize(QtCore.QSize(100, 35))
        self.drolabel_machine_y.setMaximumSize(QtCore.QSize(100, 35))
        self.drolabel_machine_y.setStyleSheet("QLabel{\n"
"    border-style: transparent;\n"
"    border-color: rgb(235, 235, 235);\n"
"    border-width: 1px;\n"
"    border-radius: 5px;\n"
"    color: black;\n"
"    background: rgb(235, 235, 235);\n"
"    font: 17pt \"Bebas Kai\";\n"
"    padding-right: 2px;\n"
"}\n"
"\n"
"QLabel[style=\"unhomed\"]{\n"
"   color: red;\n"
"}\n"
"\n"
"QLabel[style=\"homing\"]{\n"
"   color: rgb(196, 160, 0);\n"
"}")
        self.drolabel_machine_y.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.drolabel_machine_y.setProperty("referenceType", 0)
        self.drolabel_machine_y.setProperty("axisNumber", 1)
        self.drolabel_machine_y.setProperty("latheMode", 0)
        self.drolabel_machine_y.setObjectName("drolabel_machine_y")
        self.y_axis_dro_layout.addWidget(self.drolabel_machine_y)
        self.drolabel_dtg_y = DROLabel(self.widget_user)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.drolabel_dtg_y.sizePolicy().hasHeightForWidth())
        self.drolabel_dtg_y.setSizePolicy(sizePolicy)
        self.drolabel_dtg_y.setMinimumSize(QtCore.QSize(100, 35))
        self.drolabel_dtg_y.setMaximumSize(QtCore.QSize(100, 35))
        self.drolabel_dtg_y.setStyleSheet("QLabel{\n"
"    border-style: transparent;\n"
"    border-color: rgb(235, 235, 235);\n"
"    border-width: 1px;\n"
"    border-radius: 5px;\n"
"    color: black;\n"
"    background: rgb(235, 235, 235);\n"
"    font: 17pt \"Bebas Kai\";\n"
"    padding-right: 2px;\n"
"}")
        self.drolabel_dtg_y.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.drolabel_dtg_y.setProperty("referenceType", 2)
        self.drolabel_dtg_y.setProperty("axisNumber", 1)
        self.drolabel_dtg_y.setProperty("latheMode", 0)
        self.drolabel_dtg_y.setObjectName("drolabel_dtg_y")
        self.y_axis_dro_layout.addWidget(self.drolabel_dtg_y)
        self.ref_y_button = ActionButton(self.widget_user)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.ref_y_button.sizePolicy().hasHeightForWidth())
        self.ref_y_button.setSizePolicy(sizePolicy)
        self.ref_y_button.setMinimumSize(QtCore.QSize(62, 40))
        self.ref_y_button.setMaximumSize(QtCore.QSize(62, 40))
        self.ref_y_button.setFocusPolicy(QtCore.Qt.NoFocus)
        self.ref_y_button.setStyleSheet("QPushButton {\n"
"       font: 15pt \"Bebas Kai\";\n"
"}")
        self.ref_y_button.setObjectName("ref_y_button")
        self.y_axis_dro_layout.addWidget(self.ref_y_button)
        self.verticalLayout_4.addLayout(self.y_axis_dro_layout)
        self.z_axis_dro_layout = QtWidgets.QHBoxLayout()
        self.z_axis_dro_layout.setContentsMargins(1, 1, 1, 1)
        self.z_axis_dro_layout.setSpacing(7)
        self.z_axis_dro_layout.setObjectName("z_axis_dro_layout")
        self.zero_z_button = MDIButton(self.widget_user)
        self.zero_z_button.setEnabled(False)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.zero_z_button.sizePolicy().hasHeightForWidth())
        self.zero_z_button.setSizePolicy(sizePolicy)
        self.zero_z_button.setMinimumSize(QtCore.QSize(60, 40))
        self.zero_z_button.setMaximumSize(QtCore.QSize(60, 40))
        self.zero_z_button.setFocusPolicy(QtCore.Qt.NoFocus)
        self.zero_z_button.setStyleSheet("MDIButton {\n"
"       font: 17pt \"Bebas Kai\";\n"
"}")
        self.zero_z_button.setIcon(icon)
        self.zero_z_button.setIconSize(QtCore.QSize(20, 20))
        self.zero_z_button.setObjectName("zero_z_button")
        self.z_axis_dro_layout.addWidget(self.zero_z_button)
        self.dro_entry_main_z = DROLineEdit(self.widget_user)
        self.dro_entry_main_z.setMinimumSize(QtCore.QSize(100, 35))
        self.dro_entry_main_z.setMaximumSize(QtCore.QSize(100, 35))
        font = QtGui.QFont()
        font.setFamily("Bebas Kai")
        font.setPointSize(17)
        font.setBold(False)
        font.setItalic(False)
        font.setWeight(50)
        self.dro_entry_main_z.setFont(font)
        self.dro_entry_main_z.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.dro_entry_main_z.setStyleSheet("QLineEdit{\n"
"    border-style: transparant;\n"
"    border-color: rgb(235, 235, 235);\n"
"    border-width: 1px;\n"
"    border-radius: 5px;\n"
"    color: black;\n"
"    background: rgb(235, 235, 235);\n"
"    padding-right: 2px;\n"
"    font: 17pt \"Bebas Kai\";\n"
"}")
        self.dro_entry_main_z.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.dro_entry_main_z.setProperty("axisNumber", 2)
        self.dro_entry_main_z.setObjectName("dro_entry_main_z")
        self.z_axis_dro_layout.addWidget(self.dro_entry_main_z)
        self.drolabel_machine_z = DROLabel(self.widget_user)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.drolabel_machine_z.sizePolicy().hasHeightForWidth())
        self.drolabel_machine_z.setSizePolicy(sizePolicy)
        self.drolabel_machine_z.setMinimumSize(QtCore.QSize(100, 35))
        self.drolabel_machine_z.setMaximumSize(QtCore.QSize(100, 35))
        self.drolabel_machine_z.setStyleSheet("QLabel{\n"
"    border-style: transparent;\n"
"    border-color: rgb(235, 235, 235);\n"
"    border-width: 1px;\n"
"    border-radius: 5px;\n"
"    color: black;\n"
"    background: rgb(235, 235, 235);\n"
"    font: 17pt \"Bebas Kai\";\n"
"    padding-right: 2px;\n"
"}\n"
"\n"
"QLabel[style=\"unhomed\"]{\n"
"   color: red;\n"
"}\n"
"\n"
"QLabel[style=\"homing\"]{\n"
"   color: rgb(196, 160, 0);\n"
"}")
        self.drolabel_machine_z.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.drolabel_machine_z.setProperty("referenceType", 0)
        self.drolabel_machine_z.setProperty("axisNumber", 2)
        self.drolabel_machine_z.setProperty("latheMode", 0)
        self.drolabel_machine_z.setObjectName("drolabel_machine_z")
        self.z_axis_dro_layout.addWidget(self.drolabel_machine_z)
        self.drolabel_dtg_z = DROLabel(self.widget_user)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.drolabel_dtg_z.sizePolicy().hasHeightForWidth())
        self.drolabel_dtg_z.setSizePolicy(sizePolicy)
        self.drolabel_dtg_z.setMinimumSize(QtCore.QSize(100, 35))
        self.drolabel_dtg_z.setMaximumSize(QtCore.QSize(100, 35))
        self.drolabel_dtg_z.setStyleSheet("QLabel{\n"
"    border-style: transparent;\n"
"    border-color: rgb(235, 235, 235);\n"
"    border-width: 1px;\n"
"    border-radius: 5px;\n"
"    color: black;\n"
"    background: rgb(235, 235, 235);\n"
"    font: 17pt \"Bebas Kai\";\n"
"    padding-right: 2px;\n"
"}")
        self.drolabel_dtg_z.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.drolabel_dtg_z.setProperty("referenceType", 2)
        self.drolabel_dtg_z.setProperty("axisNumber", 2)
        self.drolabel_dtg_z.setProperty("latheMode", 0)
        self.drolabel_dtg_z.setObjectName("drolabel_dtg_z")
        self.z_axis_dro_layout.addWidget(self.drolabel_dtg_z)
        self.ref_z_button = ActionButton(self.widget_user)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.ref_z_button.sizePolicy().hasHeightForWidth())
        self.ref_z_button.setSizePolicy(sizePolicy)
        self.ref_z_button.setMinimumSize(QtCore.QSize(62, 40))
        self.ref_z_button.setMaximumSize(QtCore.QSize(62, 40))
        self.ref_z_button.setFocusPolicy(QtCore.Qt.NoFocus)
        self.ref_z_button.setStyleSheet("QPushButton {\n"
"       font: 15pt \"Bebas Kai\";\n"
"}")
        self.ref_z_button.setObjectName("ref_z_button")
        self.z_axis_dro_layout.addWidget(self.ref_z_button)
        self.verticalLayout_4.addLayout(self.z_axis_dro_layout)
        self.a_axis_dro_layout = QtWidgets.QHBoxLayout()
        self.a_axis_dro_layout.setContentsMargins(1, 1, 1, 1)
        self.a_axis_dro_layout.setSpacing(7)
        self.a_axis_dro_layout.setObjectName("a_axis_dro_layout")
        self.zero_a_button = MDIButton(self.widget_user)
        self.zero_a_button.setEnabled(False)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.zero_a_button.sizePolicy().hasHeightForWidth())
        self.zero_a_button.setSizePolicy(sizePolicy)
        self.zero_a_button.setMinimumSize(QtCore.QSize(60, 40))
        self.zero_a_button.setMaximumSize(QtCore.QSize(60, 40))
        self.zero_a_button.setFocusPolicy(QtCore.Qt.NoFocus)
        self.zero_a_button.setStyleSheet("MDIButton {\n"
"       font: 17pt \"Bebas Kai\";\n"
"}")
        self.zero_a_button.setIcon(icon)
        self.zero_a_button.setIconSize(QtCore.QSize(20, 20))
        self.zero_a_button.setObjectName("zero_a_button")
        self.a_axis_dro_layout.addWidget(self.zero_a_button)
        self.dro_entry_main_a = DROLineEdit(self.widget_user)
        self.dro_entry_main_a.setMinimumSize(QtCore.QSize(100, 35))
        self.dro_entry_main_a.setMaximumSize(QtCore.QSize(100, 35))
        font = QtGui.QFont()
        font.setFamily("Bebas Kai")
        font.setPointSize(17)
        font.setBold(False)
        font.setItalic(False)
        font.setWeight(50)
        self.dro_entry_main_a.setFont(font)
        self.dro_entry_main_a.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.dro_entry_main_a.setStyleSheet("QLineEdit{\n"
"    border-style: transparant;\n"
"    border-color: rgb(235, 235, 235);\n"
"    border-width: 1px;\n"
"    border-radius: 5px;\n"
"    color: black;\n"
"    background: rgb(235, 235, 235);\n"
"    padding-right: 2px;\n"
"    font: 17pt \"Bebas Kai\";\n"
"}")
        self.dro_entry_main_a.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.dro_entry_main_a.setProperty("axisNumber", 3)
        self.dro_entry_main_a.setObjectName("dro_entry_main_a")
        self.a_axis_dro_layout.addWidget(self.dro_entry_main_a)
        self.drolabel_machine_a = DROLabel(self.widget_user)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.drolabel_machine_a.sizePolicy().hasHeightForWidth())
        self.drolabel_machine_a.setSizePolicy(sizePolicy)
        self.drolabel_machine_a.setMinimumSize(QtCore.QSize(100, 35))
        self.drolabel_machine_a.setMaximumSize(QtCore.QSize(100, 35))
        self.drolabel_machine_a.setStyleSheet("QLabel{\n"
"    border-style: transparent;\n"
"    border-color: rgb(235, 235, 235);\n"
"    border-width: 1px;\n"
"    border-radius: 5px;\n"
"    color: black;\n"
"    background: rgb(235, 235, 235);\n"
"    font: 17pt \"Bebas Kai\";\n"
"    padding-right: 2px;\n"
"}\n"
"\n"
"QLabel[style=\"unhomed\"]{\n"
"   color: red;\n"
"}\n"
"\n"
"QLabel[style=\"homing\"]{\n"
"   color: rgb(196, 160, 0);\n"
"}")
        self.drolabel_machine_a.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.drolabel_machine_a.setProperty("referenceType", 0)
        self.drolabel_machine_a.setProperty("axisNumber", 3)
        self.drolabel_machine_a.setProperty("latheMode", 0)
        self.drolabel_machine_a.setObjectName("drolabel_machine_a")
        self.a_axis_dro_layout.addWidget(self.drolabel_machine_a)
        self.drolabel_dtg_a = DROLabel(self.widget_user)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.drolabel_dtg_a.sizePolicy().hasHeightForWidth())
        self.drolabel_dtg_a.setSizePolicy(sizePolicy)
        self.drolabel_dtg_a.setMinimumSize(QtCore.QSize(100, 35))
        self.drolabel_dtg_a.setMaximumSize(QtCore.QSize(100, 35))
        self.drolabel_dtg_a.setStyleSheet("QLabel{\n"
"    border-style: transparent;\n"
"    border-color: rgb(235, 235, 235);\n"
"    border-width: 1px;\n"
"    border-radius: 5px;\n"
"    color: black;\n"
"    background: rgb(235, 235, 235);\n"
"    font: 17pt \"Bebas Kai\";\n"
"    padding-right: 2px;\n"
"}")
        self.drolabel_dtg_a.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.drolabel_dtg_a.setProperty("referenceType", 2)
        self.drolabel_dtg_a.setProperty("axisNumber", 3)
        self.drolabel_dtg_a.setProperty("latheMode", 0)
        self.drolabel_dtg_a.setObjectName("drolabel_dtg_a")
        self.a_axis_dro_layout.addWidget(self.drolabel_dtg_a)
        self.ref_a_button = ActionButton(self.widget_user)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.ref_a_button.sizePolicy().hasHeightForWidth())
        self.ref_a_button.setSizePolicy(sizePolicy)
        self.ref_a_button.setMinimumSize(QtCore.QSize(62, 40))
        self.ref_a_button.setMaximumSize(QtCore.QSize(62, 40))
        self.ref_a_button.setFocusPolicy(QtCore.Qt.NoFocus)
        self.ref_a_button.setStyleSheet("QPushButton {\n"
"       font: 15pt \"Bebas Kai\";\n"
"}")
        self.ref_a_button.setObjectName("ref_a_button")
        self.a_axis_dro_layout.addWidget(self.ref_a_button)
        self.verticalLayout_4.addLayout(self.a_axis_dro_layout)
        self.b_axis_dro_layout = QtWidgets.QHBoxLayout()
        self.b_axis_dro_layout.setContentsMargins(1, 1, 1, 1)
        self.b_axis_dro_layout.setSpacing(7)
        self.b_axis_dro_layout.setObjectName("b_axis_dro_layout")
        self.zero_b_button = MDIButton(self.widget_user)
        self.zero_b_button.setEnabled(False)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.zero_b_button.sizePolicy().hasHeightForWidth())
        self.zero_b_button.setSizePolicy(sizePolicy)
        self.zero_b_button.setMinimumSize(QtCore.QSize(60, 40))
        self.zero_b_button.setMaximumSize(QtCore.QSize(60, 40))
        self.zero_b_button.setFocusPolicy(QtCore.Qt.NoFocus)
        self.zero_b_button.setStyleSheet("MDIButton {\n"
"       font: 17pt \"Bebas Kai\";\n"
"}")
        self.zero_b_button.setIcon(icon)
        self.zero_b_button.setIconSize(QtCore.QSize(20, 20))
        self.zero_b_button.setObjectName("zero_b_button")
        self.b_axis_dro_layout.addWidget(self.zero_b_button)
        self.dro_entry_main_b = DROLineEdit(self.widget_user)
        self.dro_entry_main_b.setMinimumSize(QtCore.QSize(100, 35))
        self.dro_entry_main_b.setMaximumSize(QtCore.QSize(100, 35))
        font = QtGui.QFont()
        font.setFamily("Bebas Kai")
        font.setPointSize(17)
        font.setBold(False)
        font.setItalic(False)
        font.setWeight(50)
        self.dro_entry_main_b.setFont(font)
        self.dro_entry_main_b.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.dro_entry_main_b.setStyleSheet("QLineEdit{\n"
"    border-style: transparant;\n"
"    border-color: rgb(235, 235, 235);\n"
"    border-width: 1px;\n"
"    border-radius: 5px;\n"
"    color: black;\n"
"    background: rgb(235, 235, 235);\n"
"    padding-right: 2px;\n"
"    font: 17pt \"Bebas Kai\";\n"
"}")
        self.dro_entry_main_b.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.dro_entry_main_b.setProperty("referenceType", 1)
        self.dro_entry_main_b.setProperty("axisNumber", 4)
        self.dro_entry_main_b.setProperty("latheMode", 0)
        self.dro_entry_main_b.setObjectName("dro_entry_main_b")
        self.b_axis_dro_layout.addWidget(self.dro_entry_main_b)
        self.drolabel_machine_b = DROLabel(self.widget_user)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.drolabel_machine_b.sizePolicy().hasHeightForWidth())
        self.drolabel_machine_b.setSizePolicy(sizePolicy)
        self.drolabel_machine_b.setMinimumSize(QtCore.QSize(100, 35))
        self.drolabel_machine_b.setMaximumSize(QtCore.QSize(100, 35))
        self.drolabel_machine_b.setStyleSheet("QLabel{\n"
"    border-style: transparent;\n"
"    border-color: rgb(235, 235, 235);\n"
"    border-width: 1px;\n"
"    border-radius: 5px;\n"
"    color: black;\n"
"    background: rgb(235, 235, 235);\n"
"    font: 17pt \"Bebas Kai\";\n"
"    padding-right: 2px;\n"
"}\n"
"\n"
"QLabel[style=\"unhomed\"]{\n"
"   color: red;\n"
"}\n"
"\n"
"QLabel[style=\"homing\"]{\n"
"   color: rgb(196, 160, 0);\n"
"}")
        self.drolabel_machine_b.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.drolabel_machine_b.setProperty("referenceType", 0)
        self.drolabel_machine_b.setProperty("axisNumber", 4)
        self.drolabel_machine_b.setProperty("latheMode", 0)
        self.drolabel_machine_b.setObjectName("drolabel_machine_b")
        self.b_axis_dro_layout.addWidget(self.drolabel_machine_b)
        self.drolabel_dtg_b = DROLabel(self.widget_user)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.drolabel_dtg_b.sizePolicy().hasHeightForWidth())
        self.drolabel_dtg_b.setSizePolicy(sizePolicy)
        self.drolabel_dtg_b.setMinimumSize(QtCore.QSize(100, 35))
        self.drolabel_dtg_b.setMaximumSize(QtCore.QSize(100, 35))
        self.drolabel_dtg_b.setStyleSheet("QLabel{\n"
"    border-style: transparent;\n"
"    border-color: rgb(235, 235, 235);\n"
"    border-width: 1px;\n"
"    border-radius: 5px;\n"
"    color: black;\n"
"    background: rgb(235, 235, 235);\n"
"    font: 17pt \"Bebas Kai\";\n"
"    padding-right: 2px;\n"
"}")
        self.drolabel_dtg_b.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.drolabel_dtg_b.setProperty("referenceType", 2)
        self.drolabel_dtg_b.setProperty("axisNumber", 4)
        self.drolabel_dtg_b.setProperty("latheMode", 0)
        self.drolabel_dtg_b.setObjectName("drolabel_dtg_b")
        self.b_axis_dro_layout.addWidget(self.drolabel_dtg_b)
        self.ref_b_button = ActionButton(self.widget_user)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.ref_b_button.sizePolicy().hasHeightForWidth())
        self.ref_b_button.setSizePolicy(sizePolicy)
        self.ref_b_button.setMinimumSize(QtCore.QSize(62, 40))
        self.ref_b_button.setMaximumSize(QtCore.QSize(62, 40))
        self.ref_b_button.setFocusPolicy(QtCore.Qt.NoFocus)
        self.ref_b_button.setStyleSheet("QPushButton {\n"
"       font: 15pt \"Bebas Kai\";\n"
"}")
        self.ref_b_button.setObjectName("ref_b_button")
        self.b_axis_dro_layout.addWidget(self.ref_b_button)
        self.verticalLayout_4.addLayout(self.b_axis_dro_layout)
        self.c_axis_dro_layout = QtWidgets.QHBoxLayout()
        self.c_axis_dro_layout.setContentsMargins(1, 1, 1, 1)
        self.c_axis_dro_layout.setSpacing(7)
        self.c_axis_dro_layout.setObjectName("c_axis_dro_layout")
        self.zero_c_button = MDIButton(self.widget_user)
        self.zero_c_button.setEnabled(False)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.zero_c_button.sizePolicy().hasHeightForWidth())
        self.zero_c_button.setSizePolicy(sizePolicy)
        self.zero_c_button.setMinimumSize(QtCore.QSize(60, 40))
        self.zero_c_button.setMaximumSize(QtCore.QSize(60, 40))
        self.zero_c_button.setFocusPolicy(QtCore.Qt.NoFocus)
        self.zero_c_button.setStyleSheet("MDIButton {\n"
"       font: 17pt \"Bebas Kai\";\n"
"}")
        self.zero_c_button.setIcon(icon)
        self.zero_c_button.setIconSize(QtCore.QSize(20, 20))
        self.zero_c_button.setObjectName("zero_c_button")
        self.c_axis_dro_layout.addWidget(self.zero_c_button)
        self.dro_entry_main_c = DROLineEdit(self.widget_user)
        self.dro_entry_main_c.setMinimumSize(QtCore.QSize(100, 35))
        self.dro_entry_main_c.setMaximumSize(QtCore.QSize(100, 35))
        font = QtGui.QFont()
        font.setFamily("Bebas Kai")
        font.setPointSize(17)
        font.setBold(False)
        font.setItalic(False)
        font.setWeight(50)
        self.dro_entry_main_c.setFont(font)
        self.dro_entry_main_c.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.dro_entry_main_c.setStyleSheet("QLineEdit{\n"
"    border-style: transparant;\n"
"    border-color: rgb(235, 235, 235);\n"
"    border-width: 1px;\n"
"    border-radius: 5px;\n"
"    color: black;\n"
"    background: rgb(235, 235, 235);\n"
"    padding-right: 2px;\n"
"    font: 17pt \"Bebas Kai\";\n"
"}")
        self.dro_entry_main_c.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.dro_entry_main_c.setProperty("referenceType", 1)
        self.dro_entry_main_c.setProperty("axisNumber", 5)
        self.dro_entry_main_c.setProperty("latheMode", 0)
        self.dro_entry_main_c.setObjectName("dro_entry_main_c")
        self.c_axis_dro_layout.addWidget(self.dro_entry_main_c)
        self.drolabel_machine_c = DROLabel(self.widget_user)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.drolabel_machine_c.sizePolicy().hasHeightForWidth())
        self.drolabel_machine_c.setSizePolicy(sizePolicy)
        self.drolabel_machine_c.setMinimumSize(QtCore.QSize(100, 35))
        self.drolabel_machine_c.setMaximumSize(QtCore.QSize(100, 35))
        self.drolabel_machine_c.setStyleSheet("QLabel{\n"
"    border-style: transparent;\n"
"    border-color: rgb(235, 235, 235);\n"
"    border-width: 1px;\n"
"    border-radius: 5px;\n"
"    color: black;\n"
"    background: rgb(235, 235, 235);\n"
"    font: 17pt \"Bebas Kai\";\n"
"    padding-right: 2px;\n"
"}\n"
"\n"
"QLabel[style=\"unhomed\"]{\n"
"   color: red;\n"
"}\n"
"\n"
"QLabel[style=\"homing\"]{\n"
"   color: rgb(196, 160, 0);\n"
"}")
        self.drolabel_machine_c.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.drolabel_machine_c.setProperty("referenceType", 0)
        self.drolabel_machine_c.setProperty("axisNumber", 5)
        self.drolabel_machine_c.setProperty("latheMode", 0)
        self.drolabel_machine_c.setObjectName("drolabel_machine_c")
        self.c_axis_dro_layout.addWidget(self.drolabel_machine_c)
        self.drolabel_dtg_c = DROLabel(self.widget_user)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.drolabel_dtg_c.sizePolicy().hasHeightForWidth())
        self.drolabel_dtg_c.setSizePolicy(sizePolicy)
        self.drolabel_dtg_c.setMinimumSize(QtCore.QSize(100, 35))
        self.drolabel_dtg_c.setMaximumSize(QtCore.QSize(100, 35))
        self.drolabel_dtg_c.setStyleSheet("QLabel{\n"
"    border-style: transparent;\n"
"    border-color: rgb(235, 235, 235);\n"
"    border-width: 1px;\n"
"    border-radius: 5px;\n"
"    color: black;\n"
"    background: rgb(235, 235, 235);\n"
"    font: 17pt \"Bebas Kai\";\n"
"    padding-right: 2px;\n"
"}")
        self.drolabel_dtg_c.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.drolabel_dtg_c.setProperty("referenceType", 2)
        self.drolabel_dtg_c.setProperty("axisNumber", 5)
        self.drolabel_dtg_c.setProperty("latheMode", 0)
        self.drolabel_dtg_c.setObjectName("drolabel_dtg_c")
        self.c_axis_dro_layout.addWidget(self.drolabel_dtg_c)
        self.ref_c_button = ActionButton(self.widget_user)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.ref_c_button.sizePolicy().hasHeightForWidth())
        self.ref_c_button.setSizePolicy(sizePolicy)
        self.ref_c_button.setMinimumSize(QtCore.QSize(62, 40))
        self.ref_c_button.setMaximumSize(QtCore.QSize(62, 40))
        self.ref_c_button.setFocusPolicy(QtCore.Qt.NoFocus)
        self.ref_c_button.setStyleSheet("QPushButton {\n"
"       font: 15pt \"Bebas Kai\";\n"
"}")
        self.ref_c_button.setObjectName("ref_c_button")
        self.c_axis_dro_layout.addWidget(self.ref_c_button)
        self.verticalLayout_4.addLayout(self.c_axis_dro_layout)
        self.c_axis_dro_layout_2.addWidget(self.widget_user)

        self.retranslateUi(dros_user)
        QtCore.QMetaObject.connectSlotsByName(dros_user)

    def retranslateUi(self, dros_user):
        _translate = QtCore.QCoreApplication.translate
        dros_user.setWindowTitle(_translate("dros_user", "dros_user"))
        self.zero_all_button.setText(_translate("dros_user", "ALL"))
        self.zero_all_button.setProperty("rules", _translate("dros_user", "[\n"
"    {\n"
"        \"channels\": [\n"
"            {\n"
"                \"url\": \"status:g5x_index\",\n"
"                \"trigger\": true,\n"
"                \"type\": \"int\"\n"
"            }\n"
"        ],\n"
"        \"expression\": \"\",\n"
"        \"name\": \"G5x Index\",\n"
"        \"property\": \"None\"\n"
"    }\n"
"]"))
        self.zero_all_button.setProperty("MDICommand", _translate("dros_user", "G10 L20 P{ch[0]} X0.0 Y0.0 Z0.0 A0.0 B0.0"))
        self.work_column_header.setProperty("rules", _translate("dros_user", "[{\"channels\": [{\"url\": \"status:g5x_index?text\", \"trigger\": true}], \"property\": \"Text\", \"expression\": \"ch[0] + \' WORK\'\\n\", \"name\": \"WCS Header\"}]"))
        self.machine_column_header.setText(_translate("dros_user", "MACHINE"))
        self.dtg_column_header.setText(_translate("dros_user", "DTG"))
        self.ref_all_button.setText(_translate("dros_user", "REF ALL"))
        self.ref_all_button.setProperty("rules", _translate("dros_user", "[{\"channels\": [{\"url\": \"status:all_axes_homed\", \"trigger\": true}], \"property\": \"Text\", \"expression\": \"\'HOMED\' if ch[0] else \'REF ALL\'\", \"name\": \"reference_all\"}, {\"name\": \"home_prohibit\", \"property\": \"Enable\", \"expression\": \"not (ch[0] or ch[1] or ch[2] or ch[3] or ch[4])\", \"channels\": [{\"url\": \"status:joint.0.homing\", \"trigger\": true}, {\"url\": \"status:joint.1.homing\", \"trigger\": true}, {\"url\": \"status:joint.2.homing\", \"trigger\": true}, {\"url\": \"status:joint.3.homing\", \"trigger\": true}, {\"url\": \"status:joint.4.homing\", \"trigger\": true}]}]"))
        self.ref_all_button.setProperty("actionName", _translate("dros_user", "machine.home.all"))
        self.zero_x_button.setText(_translate("dros_user", "X"))
        self.zero_x_button.setProperty("rules", _translate("dros_user", "[\n"
"    {\n"
"        \"channels\": [\n"
"            {\n"
"                \"url\": \"status:g5x_index\",\n"
"                \"trigger\": true,\n"
"                \"type\": \"int\"\n"
"            }\n"
"        ],\n"
"        \"expression\": \"\",\n"
"        \"name\": \"G5x Index\",\n"
"        \"property\": \"None\"\n"
"    }\n"
"]"))
        self.zero_x_button.setProperty("MDICommand", _translate("dros_user", "G10 L20 P{ch[0]} X0.0"))
        self.dro_entry_main_x.setText(_translate("dros_user", "     0.000"))
        self.dro_entry_main_x.setProperty("inchFormat", _translate("dros_user", "%9.4f"))
        self.dro_entry_main_x.setProperty("millimeterFormat", _translate("dros_user", "%10.3f"))
        self.dro_entry_main_x.setProperty("degreeFormat", _translate("dros_user", "%10.2f"))
        self.drolabel_machine_x.setProperty("inchFormat", _translate("dros_user", "%9.4f"))
        self.drolabel_machine_x.setProperty("millimeterFormat", _translate("dros_user", "%10.3f"))
        self.drolabel_machine_x.setProperty("degreeFormat", _translate("dros_user", "%10.2f"))
        self.drolabel_dtg_x.setProperty("inchFormat", _translate("dros_user", "%9.4f"))
        self.drolabel_dtg_x.setProperty("millimeterFormat", _translate("dros_user", "%10.3f"))
        self.drolabel_dtg_x.setProperty("degreeFormat", _translate("dros_user", "%10.2f"))
        self.ref_x_button.setText(_translate("dros_user", "REF X"))
        self.ref_x_button.setProperty("rules", _translate("dros_user", "[{\"name\": \"home_prohibit\", \"property\": \"Enable\", \"expression\": \"not (ch[0] or ch[1] or ch[2] or ch[3] or ch[4])\", \"channels\": [{\"url\": \"status:joint.0.homing\", \"trigger\": true}, {\"url\": \"status:joint.1.homing\", \"trigger\": true}, {\"url\": \"status:joint.2.homing\", \"trigger\": true}, {\"url\": \"status:joint.3.homing\", \"trigger\": true}, {\"url\": \"status:joint.4.homing\", \"trigger\": true}]}]"))
        self.ref_x_button.setProperty("actionName", _translate("dros_user", "machine.home.axis:x"))
        self.zero_y_button.setText(_translate("dros_user", "Y"))
        self.zero_y_button.setProperty("rules", _translate("dros_user", "[\n"
"    {\n"
"        \"channels\": [\n"
"            {\n"
"                \"url\": \"status:g5x_index\",\n"
"                \"trigger\": true,\n"
"                \"type\": \"int\"\n"
"            }\n"
"        ],\n"
"        \"expression\": \"\",\n"
"        \"name\": \"G5x Index\",\n"
"        \"property\": \"None\"\n"
"    }\n"
"]"))
        self.zero_y_button.setProperty("MDICommand", _translate("dros_user", "G10 L20 P{ch[0]} Y0.0"))
        self.drolabel_machine_y.setProperty("inchFormat", _translate("dros_user", "%9.4f"))
        self.drolabel_machine_y.setProperty("millimeterFormat", _translate("dros_user", "%10.3f"))
        self.drolabel_machine_y.setProperty("degreeFormat", _translate("dros_user", "%10.2f"))
        self.drolabel_dtg_y.setProperty("inchFormat", _translate("dros_user", "%9.4f"))
        self.drolabel_dtg_y.setProperty("millimeterFormat", _translate("dros_user", "%10.3f"))
        self.drolabel_dtg_y.setProperty("degreeFormat", _translate("dros_user", "%10.2f"))
        self.ref_y_button.setText(_translate("dros_user", "REF Y"))
        self.ref_y_button.setProperty("rules", _translate("dros_user", "[{\"name\": \"home_prohibit\", \"property\": \"Enable\", \"expression\": \"not (ch[0] or ch[1] or ch[2] or ch[3] or ch[4])\", \"channels\": [{\"url\": \"status:joint.0.homing\", \"trigger\": true}, {\"url\": \"status:joint.1.homing\", \"trigger\": true}, {\"url\": \"status:joint.2.homing\", \"trigger\": true}, {\"url\": \"status:joint.3.homing\", \"trigger\": true}, {\"url\": \"status:joint.4.homing\", \"trigger\": true}]}]"))
        self.ref_y_button.setProperty("actionName", _translate("dros_user", "machine.home.axis:y"))
        self.zero_z_button.setText(_translate("dros_user", "Z"))
        self.zero_z_button.setProperty("rules", _translate("dros_user", "[\n"
"    {\n"
"        \"channels\": [\n"
"            {\n"
"                \"url\": \"status:g5x_index\",\n"
"                \"trigger\": true,\n"
"                \"type\": \"int\"\n"
"            }\n"
"        ],\n"
"        \"expression\": \"\",\n"
"        \"name\": \"G5x Index\",\n"
"        \"property\": \"None\"\n"
"    }\n"
"]"))
        self.zero_z_button.setProperty("MDICommand", _translate("dros_user", "G10 L20 P{ch[0]} Z0.0"))
        self.drolabel_machine_z.setProperty("inchFormat", _translate("dros_user", "%9.4f"))
        self.drolabel_machine_z.setProperty("millimeterFormat", _translate("dros_user", "%10.3f"))
        self.drolabel_machine_z.setProperty("degreeFormat", _translate("dros_user", "%10.2f"))
        self.drolabel_dtg_z.setProperty("inchFormat", _translate("dros_user", "%9.4f"))
        self.drolabel_dtg_z.setProperty("millimeterFormat", _translate("dros_user", "%10.3f"))
        self.drolabel_dtg_z.setProperty("degreeFormat", _translate("dros_user", "%10.2f"))
        self.ref_z_button.setText(_translate("dros_user", "REF Z"))
        self.ref_z_button.setProperty("rules", _translate("dros_user", "[{\"name\": \"home_prohibit\", \"property\": \"Enable\", \"expression\": \"not (ch[0] or ch[1] or ch[2] or ch[3] or ch[4])\", \"channels\": [{\"url\": \"status:joint.0.homing\", \"trigger\": true}, {\"url\": \"status:joint.1.homing\", \"trigger\": true}, {\"url\": \"status:joint.2.homing\", \"trigger\": true}, {\"url\": \"status:joint.3.homing\", \"trigger\": true}, {\"url\": \"status:joint.4.homing\", \"trigger\": true}]}]"))
        self.ref_z_button.setProperty("actionName", _translate("dros_user", "machine.home.axis:z"))
        self.zero_a_button.setText(_translate("dros_user", "A"))
        self.zero_a_button.setProperty("rules", _translate("dros_user", "[\n"
"    {\n"
"        \"channels\": [\n"
"            {\n"
"                \"url\": \"status:g5x_index\",\n"
"                \"trigger\": true\n"
"            }\n"
"        ],\n"
"        \"expression\": \"\",\n"
"        \"name\": \"G5x Index\",\n"
"        \"property\": \"None\"\n"
"    }\n"
"]"))
        self.zero_a_button.setProperty("MDICommand", _translate("dros_user", "G10 L20 P{ch[0]} A0.0"))
        self.drolabel_machine_a.setProperty("inchFormat", _translate("dros_user", "%9.4f"))
        self.drolabel_machine_a.setProperty("millimeterFormat", _translate("dros_user", "%10.3f"))
        self.drolabel_machine_a.setProperty("degreeFormat", _translate("dros_user", "%10.2f"))
        self.drolabel_dtg_a.setProperty("inchFormat", _translate("dros_user", "%9.4f"))
        self.drolabel_dtg_a.setProperty("millimeterFormat", _translate("dros_user", "%10.3f"))
        self.drolabel_dtg_a.setProperty("degreeFormat", _translate("dros_user", "%10.2f"))
        self.ref_a_button.setText(_translate("dros_user", "REF A"))
        self.ref_a_button.setProperty("rules", _translate("dros_user", "[{\"name\": \"home_prohibit\", \"property\": \"Enable\", \"expression\": \"not (ch[0] or ch[1] or ch[2] or ch[3] or ch[4])\", \"channels\": [{\"url\": \"status:joint.0.homing\", \"trigger\": true}, {\"url\": \"status:joint.1.homing\", \"trigger\": true}, {\"url\": \"status:joint.2.homing\", \"trigger\": true}, {\"url\": \"status:joint.3.homing\", \"trigger\": true}, {\"url\": \"status:joint.4.homing\", \"trigger\": true}]}]"))
        self.ref_a_button.setProperty("actionName", _translate("dros_user", "machine.home.axis:a"))
        self.zero_b_button.setText(_translate("dros_user", "B"))
        self.zero_b_button.setProperty("rules", _translate("dros_user", "[\n"
"    {\n"
"        \"channels\": [\n"
"            {\n"
"                \"url\": \"status:g5x_index\",\n"
"                \"trigger\": true,\n"
"                \"type\": \"int\"\n"
"            }\n"
"        ],\n"
"        \"expression\": \"\",\n"
"        \"name\": \"G5x Index\",\n"
"        \"property\": \"None\"\n"
"    }\n"
"]"))
        self.zero_b_button.setProperty("MDICommand", _translate("dros_user", "G10 L20 P{ch[0]} B0.0"))
        self.dro_entry_main_b.setProperty("inchFormat", _translate("dros_user", "%9.4f"))
        self.dro_entry_main_b.setProperty("millimeterFormat", _translate("dros_user", "%10.3f"))
        self.dro_entry_main_b.setProperty("degreeFormat", _translate("dros_user", "%10.2f"))
        self.drolabel_machine_b.setProperty("inchFormat", _translate("dros_user", "%9.4f"))
        self.drolabel_machine_b.setProperty("millimeterFormat", _translate("dros_user", "%10.3f"))
        self.drolabel_machine_b.setProperty("degreeFormat", _translate("dros_user", "%10.2f"))
        self.drolabel_dtg_b.setProperty("inchFormat", _translate("dros_user", "%9.4f"))
        self.drolabel_dtg_b.setProperty("millimeterFormat", _translate("dros_user", "%10.3f"))
        self.drolabel_dtg_b.setProperty("degreeFormat", _translate("dros_user", "%10.2f"))
        self.ref_b_button.setText(_translate("dros_user", "REF B"))
        self.ref_b_button.setProperty("rules", _translate("dros_user", "[{\"name\": \"home_prohibit\", \"property\": \"Enable\", \"expression\": \"not (ch[0] or ch[1] or ch[2] or ch[3] or ch[4])\", \"channels\": [{\"url\": \"status:joint.0.homing\", \"trigger\": true}, {\"url\": \"status:joint.1.homing\", \"trigger\": true}, {\"url\": \"status:joint.2.homing\", \"trigger\": true}, {\"url\": \"status:joint.3.homing\", \"trigger\": true}, {\"url\": \"status:joint.4.homing\", \"trigger\": true}]}]"))
        self.ref_b_button.setProperty("actionName", _translate("dros_user", "machine.home.axis:b"))
        self.zero_c_button.setText(_translate("dros_user", "C"))
        self.zero_c_button.setProperty("rules", _translate("dros_user", "[\n"
"    {\n"
"        \"channels\": [\n"
"            {\n"
"                \"url\": \"status:g5x_index\",\n"
"                \"trigger\": true,\n"
"                \"type\": \"int\"\n"
"            }\n"
"        ],\n"
"        \"expression\": \"\",\n"
"        \"name\": \"G5x Index\",\n"
"        \"property\": \"None\"\n"
"    }\n"
"]"))
        self.zero_c_button.setProperty("MDICommand", _translate("dros_user", "G10 L20 P{ch[0]} C0.0"))
        self.dro_entry_main_c.setProperty("inchFormat", _translate("dros_user", "%9.4f"))
        self.dro_entry_main_c.setProperty("millimeterFormat", _translate("dros_user", "%10.3f"))
        self.dro_entry_main_c.setProperty("degreeFormat", _translate("dros_user", "%10.2f"))
        self.drolabel_machine_c.setProperty("inchFormat", _translate("dros_user", "%9.4f"))
        self.drolabel_machine_c.setProperty("millimeterFormat", _translate("dros_user", "%10.3f"))
        self.drolabel_machine_c.setProperty("degreeFormat", _translate("dros_user", "%10.2f"))
        self.drolabel_dtg_c.setProperty("inchFormat", _translate("dros_user", "%9.4f"))
        self.drolabel_dtg_c.setProperty("millimeterFormat", _translate("dros_user", "%10.3f"))
        self.drolabel_dtg_c.setProperty("degreeFormat", _translate("dros_user", "%10.2f"))
        self.ref_c_button.setText(_translate("dros_user", "REF C"))
        self.ref_c_button.setProperty("rules", _translate("dros_user", "[{\"name\": \"home_prohibit\", \"property\": \"Enable\", \"expression\": \"not (ch[0] or ch[1] or ch[2] or ch[3] or ch[4])\", \"channels\": [{\"url\": \"status:joint.0.homing\", \"trigger\": true}, {\"url\": \"status:joint.1.homing\", \"trigger\": true}, {\"url\": \"status:joint.2.homing\", \"trigger\": true}, {\"url\": \"status:joint.3.homing\", \"trigger\": true}, {\"url\": \"status:joint.4.homing\", \"trigger\": true}]}]"))
        self.ref_c_button.setProperty("actionName", _translate("dros_user", "machine.home.axis:c"))
from qtpyvcp.widgets.button_widgets.action_button import ActionButton
from qtpyvcp.widgets.button_widgets.mdi_button import MDIButton
from qtpyvcp.widgets.display_widgets.dro_label import DROLabel
from qtpyvcp.widgets.display_widgets.status_label import StatusLabel
from qtpyvcp.widgets.input_widgets.dro_line_edit import DROLineEdit
import probe_basic_rc
